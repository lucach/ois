%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (explosion.eps)
%%CreationDate: (2016-01-27T23:31:15+01:00)
%%BoundingBox: -0 -0 331 274
%%HiResBoundingBox: 0 0 331.2 274
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 331 274
userdict begin
DisplayImage
0 0
331.2 273.6
12
23 19
1
0
0
202
FFFFFF
B7B6B1
2E0002
463033
250802
893032
A82A2B
FE997B
942923
4C1B16
190504
BF161B
D01214
A02A2A
A72B2B
D72A2E
FFC756
AF2A2B
8D2B2A
8E2C2B
802626
932D29
893535
B81C1D
F47026
B22825
F78512
E44A30
FED561
E64E29
DA412F
E04229
D12926
D12B2B
982B24
ADA5A2
491615
CB1410
AF242B
B82832
CC2B21
E44E2D
F57824
FBD85A
E75C21
F47804
F07901
E2352E
D6292B
9E2B26
A91F1F
290302
8C2127
932B2C
E23C30
E24029
DA542E
F49503
F7B00A
FCD64F
F69103
F68E07
F77908
EC7A00
D12730
B72824
90282F
8A2C2C
A92B2C
C02722
E88D0B
E55129
E86D20
FBE7B2
FED555
FDD856
FED255
FDD250
F79808
EB7400
DC422A
DF3E22
A9292A
94272A
982A2B
C32B2A
E04028
E24033
F49904
FEAD16
FFC740
FFE6AE
FCED9A
FEE9A8
FFD452
FFE9A0
FCD552
E6522E
E43E26
551A1C
8C2826
912D2D
BC2D27
FDC661
FCD35F
F6D36F
F7DE8A
F8E9B2
FDE7B5
FEE7B1
FFD358
F5B00B
F58903
E95728
E0402A
9D302D
4D1611
BB2A27
DF3E2C
E44E29
F08600
F9D052
F9D946
FFE4AD
FFD454
FFD451
F06929
E04227
DE2A29
A52B2A
FFFFFD
531615
A22C2C
B42D27
E04324
FAD24C
F69200
FCD355
FFD356
FCD458
FBDF7C
F69D05
FFA825
F17629
F08C10
B12929
942828
922A2B
A23016
E4391D
E85833
F17E07
FED653
F89402
FED152
E7662C
E3581D
EC5F29
E75629
290008
942629
B62723
D53632
360000
E14328
E85027
E0412B
FAD93E
E4482F
D8432D
F98122
EB5636
8F2525
872E2A
AB2E2A
D42B26
8F2B2B
A12A2C
B0292D
F37C28
F07635
F28216
EB8517
D94225
9F2F2E
872F2E
AE201C
8E2C23
863426
E54920
96251D
8E2A2A
8A2F2E
4D1E18
2B0200
912928
802B2E
581715
2D0402
8B2C2A
F5DBDE
4D1C20
0000000000000000000000000000000000000000000000000000000000000000010000000000
00000000000000000000000000000203040506070800090A000000000000000000000000000B
0C0D0E0F1011121314150000000000000000000000161718191A1B1C1D1E1F20212200000000
00000000232425262728292A2B2C2D2E2F30313200000000000000333435363738393A3B3C3D
3E3F40413142000000000000434445464748494A4B4C4D4E4F50515253000000000000545556
5758595A5B5C5D5E5F606162636400000000000065666768696A6B6C6D6D6E6F707172207300
0000000000007475767778797A6D7B7C7D6E7E7F808100000000008283008485868788898A8B
8C8D8E8F9091920000000000000000939495969798999A9B9C9D9E9FA0000000000000000000
A1A2A3A477A5A6A7A8A9AAABACAD000000000000000000AEAFB0B1B2B3B4B5B6B7B8B9120000
00000000000000000000BABBBCBDBEBF02BF1212C00000000000000000000000C1C2C3C4C582
C6C7121200C8000000000000000000000000000000C900000000000000000000000000000000
00000000000000000000000000000000000000

end
%%PageTrailer
%%Trailer
%%EOF
